#!/bin/bash
help(){
  echo "convert shadowsocks URI to .json file"
  echo -e "Usage: uri2json [Options]\n
    Options:\n
      -u [URI]      The URI of the proxy. it starts with ss://\n
      -q [QR code]  The QR code to the URI\n
      -o [FILE]     output to a json file, FILE should not be ended with .json extension.\n
                    if this option was not specified, the output file name will be the tag in the URI.\n
      -h            This help message"
  exit $1
}
#while [[ $# -gt 0 ]]; do
#  case $1 in
#    -o|--output)
#      tag="$2"
#      shift
#      shift
#      ;;
#    -q|--qrcode)
#      uri=$(zbarimg -q --raw "$2")
#      shift
#      shift
#      ;;
#    *)
#      uri="$1"
#      tag=$(echo -n "$uri" | cut -d'/' -f3 | cut -d'@' -f2 | cut -d'#' -f2)
#      shift
#      ;;
#  esac
#done
while getopts o:u:q:h opt; do
  case "$opt" in
    o) tag=${OPTARG};;
    u) uri=${OPTARG}
       tag=$(echo -n "$uri" | cut -d'/' -f3 | cut -d'@' -f2 | cut -d'#' -f2)
      ;;
    q) uri=$(zbarimg -q --raw "${OPTARG}")
       tag=$(echo -n "$uri" | cut -d'/' -f3 | cut -d'@' -f2 | cut -d'#' -f2)
       ;;
    h) help 0;;
  esac
done

if [ "$uri" != "" ] && [[ "$uri" != ss://* ]]; then
  echo "Wrong URI" && help 1
elif [ "$uri" = "" ]; then
  help 1
fi

if [[ "$tag" = *.json ]]; then
  echo "Do not specify the file extension. instead of example.json, enter example" && help 1
fi

if echo "$uri" | grep -q "@"; then
  method_and_pass=$(echo -n "$uri" | cut -d'/' -f3 | cut -d'@' -f1 | base64 --decode 2>/dev/null)
  method=$(echo -n "$method_and_pass" | cut -d':' -f1)
  pass=$(echo -n "$method_and_pass" | cut -d':' -f2)
  server_and_s_port=$(echo -n "$uri" | cut -d'/' -f3 | cut -d'@' -f2 | cut -d'#' -f1)
else
  method_pass_server_s_port=$(echo -n "$uri" | cut -d'/' -f3 | cut -d'#' -f1 | base64 --decode 2>/dev/null)
  method=$(echo -n "$method_pass_server_s_port" | cut -d':' -f1)
  pass=$(echo -n "$method_pass_server_s_port" | cut -d'@' -f 1 | cut -d':' -f2)
  server_and_s_port=$(echo -n "$method_pass_server_s_port" | cut -d'@' -f2)
fi
server=$(echo -n "$server_and_s_port" | cut -d':' -f1)
s_port=$(echo -n "$server_and_s_port" | cut -d':' -f2)

[ "$server" != "" ] && [ "$s_port" != "" ] && [ "$pass" != "" ] && [ "$method" != "" ] &&
cat << END >> $tag.json &&
{
    "server": "$server",
    "server_port": "$s_port",
    "local_address": "127.0.0.1",
    "local_port": "8388",
    "password": "$pass",
    "timeout": "600",
    "method": "$method",
    "fast_open": false
}
END
echo "$tag.json is now in the working directory"
